#step: para comparar modelos
#Modelo AIC es el mejor modelo para comparar modelos

#Problemas con normalidad
#CORREGIR NORMALIDAD
#Prueba de casos atípicos 
#car:paqueteria y dentro esta la funcion outlierTest para identificar la observación atípica
#############24 DE NOVIEMBRE
####EJERCICIO
#AP:Precio Promedio
#CPC: Consumo por Cliente
city<-c("ama","bor","dal","sha","roy","tex","cor","pal","mar","low","palo","mil","mem","gra","lla",
        "bro","mer","kar","mat","lap")
AP<-c(30,31,37,42,43,45,50,54,54,57,58,58,60,73,88,89,92,97,100,102)
CPC<-c(134,112,136,109,105,87,56,43,77,35,65,56,58,55,49,39,36,46,40,42)
prima<-c(200,205,198,315,211,310,200,306,245,287,298,264,255,306,315,222,244,158,166,216)
## Genere 3 modelos con los datos anteriores
#Para cada modelo, encuentre el valor de R2 y AIC, y genere una gráfica residual 
#Comente sobre la adecuación de los tres modelos
base<-data.frame(AP,CPC,prima)
pairs(base)
cor(base)
nulo<- lm(AP~1, data = base)
completo<- lm (AP~., data = base)
step (completo, scope = list(lower=nulo, upper=completo), direction = "forward")
#1)Modelo 1
mod1<- lm(AP~CPC+prima, data = base)
summary(mod1)
###La R2 es de .6663, es decir, el modelo presenta una variabilidad del 67% y un AIC de 107.41
mod1$residuals.mod1<-residuals(mod1)
plot(mod1$residuals.mod1)

#2)Modelo 2
mod2<-lm(AP~CPC,data=base)
summary(mod2)
##La R2 es de 0.6033, es decir el modelo presenta una variabilidad del 60% y un AIC DE 168.7725
mod2$residuals.mod2<-residuals(mod2)
plot(mod1$residuals.mod2)
AIC(mod2)

#3)Modelo 3 
mod3<-lm(AP~prima,base)
summary(mod3)
mod3$residuals.mod3<-residuals(mod3)
plot(mod3$residuals.mod3)
AIC(mod3)
##La R2 es de -0.02649, es decir, el modelo presenta una variación del -2% y un AIC de 187.78
##Se elije el modelo 1 porque tiene un AIC menor de 107.41 y al graficar no tiene una tendencia fija
summary(mod1)
#y=135.62-0.59310x1-0.12888x2
b0=mod1$coefficients[1]
b1=mod1$coefficients[2]
b2=mod1$coefficients[3]
b0
b1
b2

#2) Para los valores de CPC 40,60,80,100,120 calcula el AP 
predict(mod2,data.frame(CPC=40),interval = 'predict')
# 79.3927 , limite inferior=46.64 , lim sup=112.13
predict(mod2,data.frame(CPC=60),interval = 'predict')
# 68.08739 , limite inferior=35.8991 , lim sup=100.278
predict(mod2,data.frame(CPC=80),interval = 'predict')
# 56.78 , limite inferior=24.5622 , lim sup=89.00196
predict(mod2,data.frame(CPC=100),interval = 'predict')
# 45.47677 , limite inferior=12.64757 , lim sup=78.30598
predict(mod2,data.frame(CPC=120),interval = 'predict')
# 34.17147 , limite inferior=0.1841069 , lim sup=68.15882
